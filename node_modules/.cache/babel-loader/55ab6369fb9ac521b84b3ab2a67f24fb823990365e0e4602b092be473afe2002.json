{"ast":null,"code":"var _jsxFileName = \"/Users/sunil/Desktop/mdev-dashboard/src/components/Checklist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/checklist.css';\n\n//checklist function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checklist = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  // handling additem function\n  const handleAddItem = () => {\n    if (inputValue.trim() !== '') {\n      setItems([...items, inputValue]);\n      setInputValue('');\n    }\n  };\n\n  //handle remove item from checklist\n  const handleRemoveItem = index => {\n    const newItems = items.filter((_, i) => i !== index);\n    setItems(newItems);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checklist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Checklist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checklist-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        placeholder: \"Add new task...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddItem,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), \" // on click action\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleRemoveItem(index),\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Checklist, \"dLPUah1aqPhTEjz1t77n022eOEc=\");\n_c = Checklist;\nexport default Checklist;\nvar _c;\n$RefreshReg$(_c, \"Checklist\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Checklist","_s","items","setItems","inputValue","setInputValue","handleAddItem","trim","handleRemoveItem","index","newItems","filter","_","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","item","_c","$RefreshReg$"],"sources":["/Users/sunil/Desktop/mdev-dashboard/src/components/Checklist.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/checklist.css';\n\n\n//checklist function\nconst Checklist = () => {\n    const [items, setItems] = useState([]);\n    const [inputValue, setInputValue] = useState('');\n\n\n    // handling additem function\n    const handleAddItem = () => {\n        if (inputValue.trim() !== '') {\n            setItems([...items, inputValue]);\n            setInputValue('');\n        }\n    };\n\n    //handle remove item from checklist\n    const handleRemoveItem = (index) => {\n        const newItems = items.filter((_, i) => i !== index);\n        setItems(newItems);\n    };\n\n    return (\n        <div className=\"checklist\">\n            <h2>Checklist</h2>\n            <div className=\"checklist-input\">\n                <input\n                    type=\"text\"\n                    value={inputValue}\n                    onChange={(e) => setInputValue(e.target.value)}\n                    placeholder=\"Add new task...\"\n                />\n                <button onClick={handleAddItem}>Add</button> // on click action \n            </div>\n            <ul>\n                {items.map((item, index) => (\n                    <li key={index} onClick={() => handleRemoveItem(index)}>\n                        {item}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Checklist;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,yBAAyB;;AAGhC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAGhD;EACA,MAAMS,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIF,UAAU,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC1BJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEE,UAAU,CAAC,CAAC;MAChCC,aAAa,CAAC,EAAE,CAAC;IACrB;EACJ,CAAC;;EAED;EACA,MAAMG,gBAAgB,GAAIC,KAAK,IAAK;IAChC,MAAMC,QAAQ,GAAGR,KAAK,CAACS,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKJ,KAAK,CAAC;IACpDN,QAAQ,CAACO,QAAQ,CAAC;EACtB,CAAC;EAED,oBACIX,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBhB,OAAA;MAAAgB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBpB,OAAA;MAAKe,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5BhB,OAAA;QACIqB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEjB,UAAW;QAClBkB,QAAQ,EAAGC,CAAC,IAAKlB,aAAa,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC/CI,WAAW,EAAC;MAAiB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACFpB,OAAA;QAAQ2B,OAAO,EAAEpB,aAAc;QAAAS,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,uBAChD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNpB,OAAA;MAAAgB,QAAA,EACKb,KAAK,CAACyB,GAAG,CAAC,CAACC,IAAI,EAAEnB,KAAK,kBACnBV,OAAA;QAAgB2B,OAAO,EAAEA,CAAA,KAAMlB,gBAAgB,CAACC,KAAK,CAAE;QAAAM,QAAA,EAClDa;MAAI,GADAnB,KAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAClB,EAAA,CAxCID,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AA0Cf,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}