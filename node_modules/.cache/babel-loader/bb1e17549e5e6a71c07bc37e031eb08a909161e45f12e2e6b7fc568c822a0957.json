{"ast":null,"code":"var _jsxFileName = \"/Users/sunil/Desktop/mdev-dashboard/src/components/Checklist.js\",\n  _s = $RefreshSig$();\n// Checklist.js\nimport React, { useState } from 'react';\nimport '../styles/checklist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checklist = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleAddTask = () => {\n    if (inputValue.trim() !== '') {\n      setTasks([...tasks, inputValue]);\n      setInputValue('');\n    }\n  };\n  const handleRemoveTask = index => {\n    const newTasks = tasks.filter((_, i) => i !== index);\n    setTasks(newTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checklist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Checklist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a new task\",\n        value: inputValue,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleRemoveTask(index),\n        children: task\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Checklist, \"dZOh9aOqast4wiL+dv9rgcQ5NIU=\");\n_c = Checklist;\nexport default Checklist;\nvar _c;\n$RefreshReg$(_c, \"Checklist\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Checklist","_s","tasks","setTasks","inputValue","setInputValue","handleInputChange","event","target","value","handleAddTask","trim","handleRemoveTask","index","newTasks","filter","_","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","task","_c","$RefreshReg$"],"sources":["/Users/sunil/Desktop/mdev-dashboard/src/components/Checklist.js"],"sourcesContent":["// Checklist.js\nimport React, { useState } from 'react';\nimport '../styles/checklist.css';\n\nconst Checklist = () => {\n    const [tasks, setTasks] = useState([]);\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (event) => {\n        setInputValue(event.target.value);\n    };\n\n    const handleAddTask = () => {\n        if (inputValue.trim() !== '') {\n            setTasks([...tasks, inputValue]);\n            setInputValue('');\n        }\n    };\n\n    const handleRemoveTask = (index) => {\n        const newTasks = tasks.filter((_, i) => i !== index);\n        setTasks(newTasks);\n    };\n\n    return (\n        <div className=\"checklist\">\n            <h2>Checklist</h2>\n            <div className=\"input-container\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Add a new task\"\n                    value={inputValue}\n                    onChange={handleInputChange}\n                />\n                <button onClick={handleAddTask}>Add</button>\n            </div>\n            <ul>\n                {tasks.map((task, index) => (\n                    <li key={index} onClick={() => handleRemoveTask(index)}>\n                        {task}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Checklist;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMS,iBAAiB,GAAIC,KAAK,IAAK;IACjCF,aAAa,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIN,UAAU,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC1BR,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEE,UAAU,CAAC,CAAC;MAChCC,aAAa,CAAC,EAAE,CAAC;IACrB;EACJ,CAAC;EAED,MAAMO,gBAAgB,GAAIC,KAAK,IAAK;IAChC,MAAMC,QAAQ,GAAGZ,KAAK,CAACa,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKJ,KAAK,CAAC;IACpDV,QAAQ,CAACW,QAAQ,CAAC;EACtB,CAAC;EAED,oBACIf,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBpB,OAAA;MAAAoB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBxB,OAAA;MAAKmB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5BpB,OAAA;QACIyB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,gBAAgB;QAC5BhB,KAAK,EAAEL,UAAW;QAClBsB,QAAQ,EAAEpB;MAAkB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACFxB,OAAA;QAAQ4B,OAAO,EAAEjB,aAAc;QAAAS,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACNxB,OAAA;MAAAoB,QAAA,EACKjB,KAAK,CAAC0B,GAAG,CAAC,CAACC,IAAI,EAAEhB,KAAK,kBACnBd,OAAA;QAAgB4B,OAAO,EAAEA,CAAA,KAAMf,gBAAgB,CAACC,KAAK,CAAE;QAAAM,QAAA,EAClDU;MAAI,GADAhB,KAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACtB,EAAA,CAzCID,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AA2Cf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}